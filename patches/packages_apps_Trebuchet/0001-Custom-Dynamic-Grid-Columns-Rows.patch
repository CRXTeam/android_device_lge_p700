From c7d0b2c7ba351119e0936a4df171dd396268e6ad Mon Sep 17 00:00:00 2001
From: = <tom.keidar@gmail.com>
Date: Tue, 8 Apr 2014 02:47:09 +0300
Subject: [PATCH] Custom Dynamic Grid Columns & Rows:

Added the following functionality
    * allows chaning of the amount of columns & rows on the homescreen
    * allows resource overlays for const minimum and maximum values
    * maximum value can also be calculated based on the device profile (if
        specified by the overlay) - default behaviour

Change-Id: I12a676c19dbfa33a0b5dfe07ae026248ff2761bc
---
 res/values/attrs.xml                               |   7 ++
 res/values/cm_strings.xml                          |   2 +
 res/values/preferences_defaults.xml                |   5 +
 res/xml/preferences_homescreen.xml                 |  18 +++
 src/com/android/launcher3/DeviceProfile.java       |  10 ++
 src/com/android/launcher3/NumberPreference.java    | 123 +++++++++++++++++++++
 src/com/android/launcher3/Workspace.java           |  24 ++++
 .../launcher3/settings/SettingsProvider.java       |   4 +
 8 files changed, 193 insertions(+)
 create mode 100644 src/com/android/launcher3/NumberPreference.java

diff --git a/res/values/attrs.xml b/res/values/attrs.xml
index c64b4f9..09b36dd 100644
--- a/res/values/attrs.xml
+++ b/res/values/attrs.xml
@@ -167,4 +167,11 @@
         <attr name="overlay" format="boolean"/>
     </declare-styleable>

+    <!-- used in settings with min & max such as custom rows & columns -->
+    <declare-styleable name="NumberPreference">
+        <attr name="min" format="integer"></attr>
+        <attr name="max" format="integer"></attr>
+        <attr name="dynamicMax" format="boolean"></attr>
+        <attr name="dynamicMaxKey" format="string"></attr>
+    </declare-styleable>
 </resources>
diff --git a/res/values/cm_strings.xml b/res/values/cm_strings.xml
index 1d8034e..95f2afe 100644
--- a/res/values/cm_strings.xml
+++ b/res/values/cm_strings.xml
@@ -54,6 +54,8 @@
     <string name="preferences_interface_homescreen_search_summary">Show persistent search bar at top of screen</string>
     <string name="preferences_interface_homescreen_general_hide_icon_labels_title">Hide icon labels</string>
     <string name="preferences_interface_homescreen_general_hide_icon_labels_summary">Hide icon labels on homescreen</string>
+    <string name="preferences_interface_homescreen_rows_title">Number of rows</string>
+    <string name="preferences_interface_homescreen_columns_title">Number of columns</string>

     <!-- Drawer -->
     <string name="preferences_interface_drawer_title">Drawer</string>
diff --git a/res/values/preferences_defaults.xml b/res/values/preferences_defaults.xml
index 98d8bb7..90ae71a 100644
--- a/res/values/preferences_defaults.xml
+++ b/res/values/preferences_defaults.xml
@@ -6,6 +6,11 @@
     <bool name="preferences_interface_homescreen_scrolling_page_outlines_default">@bool/config_workspaceDefaultShowOutlines</bool>
     <bool name="preferences_interface_homescreen_scrolling_fade_adjacent_default">@bool/config_workspaceFadeAdjacentScreens</bool>
     <bool name="preferences_interface_homescreen_hide_icon_labels_default">false</bool>
+    <bool name="preferences_interface_homescreen_hide_icon_labels">false</bool>
+    <integer name="preferences_interface_homescreen_rows_max">7</integer>
+    <bool name="preferences_interface_homescreen_rows_dynamicmax">true</bool>
+    <integer name="preferences_interface_homescreen_columns_max">7</integer>
+    <bool name="preferences_interface_homescreen_columns_dynamicmax">true</bool>
     <string name="preferences_interface_drawer_scrolling_transition_effect">stack</string>
     <bool name="preferences_interface_drawer_scrolling_fade_adjacent_default">false</bool>
     <bool name="preferences_interface_drawer_remove_hidden_apps_shortcuts_default">false</bool>
diff --git a/res/xml/preferences_homescreen.xml b/res/xml/preferences_homescreen.xml
index 1754cfa..1c55a1d 100644
--- a/res/xml/preferences_homescreen.xml
+++ b/res/xml/preferences_homescreen.xml
@@ -18,12 +18,30 @@
         xmlns:launcher="http://schemas.android.com/apk/res/com.android.launcher3"
         android:key="ui_homescreen"
         android:title="@string/preferences_interface_homescreen_title">
+
     <CheckBoxPreference android:key="ui_homescreen_search"
             android:title="@string/preferences_interface_homescreen_search_title"
             android:summary="@string/preferences_interface_homescreen_search_summary"
             android:defaultValue="@bool/preferences_interface_homescreen_search_default" />
+
     <CheckBoxPreference android:key="ui_homescreen_general_hide_icon_labels"
             android:title="@string/preferences_interface_homescreen_general_hide_icon_labels_title"
             android:summary="@string/preferences_interface_homescreen_general_hide_icon_labels_summary"
             android:defaultValue="@bool/preferences_interface_homescreen_hide_icon_labels_default" />
+
+    <com.android.launcher3.NumberPreference
+            android:key="ui_homescreen_rows"
+            android:title="@string/preferences_interface_homescreen_rows_title"
+            launcher:min="1"
+            launcher:max="@integer/preferences_interface_homescreen_rows_max"
+            launcher:dynamicMaxKey="ui_homescreen_rows_max"
+            launcher:dynamicMax="@bool/preferences_interface_homescreen_rows_dynamicmax" />
+
+    <com.android.launcher3.NumberPreference
+            android:key="ui_homescreen_columns"
+            android:title="@string/preferences_interface_homescreen_columns_title"
+            launcher:min="1"
+            launcher:max="@integer/preferences_interface_homescreen_columns_max"
+            launcher:dynamicMaxKey="ui_homescreen_columns_max"
+            launcher:dynamicMax="@bool/preferences_interface_homescreen_columns_dynamicmax" />
 </PreferenceScreen>
diff --git a/src/com/android/launcher3/DeviceProfile.java b/src/com/android/launcher3/DeviceProfile.java
index b09f67e..6625eae 100644
--- a/src/com/android/launcher3/DeviceProfile.java
+++ b/src/com/android/launcher3/DeviceProfile.java
@@ -191,12 +191,22 @@ public class DeviceProfile {
             points.add(new DeviceProfileQuery(p.minWidthDps, p.minHeightDps, p.numRows));
         }
         numRows = Math.round(invDistWeightedInterpolate(minWidth, minHeight, points));
+        int iTempNumberOfRows = SettingsProvider.getIntCustomDefault(context,
+                SettingsProvider.SETTINGS_UI_HOMESCREEN_ROWS, (int)numRows);
+        if (iTempNumberOfRows > 0) {
+            numRows = iTempNumberOfRows;
+        }
         // Interpolate the columns
         points.clear();
         for (DeviceProfile p : profiles) {
             points.add(new DeviceProfileQuery(p.minWidthDps, p.minHeightDps, p.numColumns));
         }
         numColumns = Math.round(invDistWeightedInterpolate(minWidth, minHeight, points));
+        int iTempNumberOfColumns = SettingsProvider.getIntCustomDefault(context,
+                SettingsProvider.SETTINGS_UI_HOMESCREEN_COLUMNS, (int)numColumns);
+        if (iTempNumberOfColumns > 0) {
+            numColumns = iTempNumberOfColumns;
+        }
         // Interpolate the hotseat length
         points.clear();
         for (DeviceProfile p : profiles) {
diff --git a/src/com/android/launcher3/NumberPreference.java b/src/com/android/launcher3/NumberPreference.java
new file mode 100644
index 0000000..69d3a45
--- /dev/null
+++ b/src/com/android/launcher3/NumberPreference.java
@@ -0,0 +1,123 @@
+package com.android.launcher3;
+
+import android.app.AlertDialog;
+import android.content.Context;
+import android.content.res.TypedArray;
+import android.preference.DialogPreference;
+import android.util.AttributeSet;
+import android.view.View;
+import android.widget.NumberPicker;
+import com.android.launcher3.settings.SettingsProvider;
+
+
+public class NumberPreference extends DialogPreference {
+
+    private int m_iMin = 0;
+    private int m_iMax = 0;
+    private boolean m_bDynamicMax = false;
+    private String m_sDynamicMaxKey = "";
+
+    private NumberPicker mNumberPicker = null;
+
+    public NumberPreference(Context context, AttributeSet attrs) {
+        super(context, attrs);
+
+        TypedArray a = context.obtainStyledAttributes(attrs, R.styleable.NumberPreference, 0, 0);
+        m_iMin = a.getInt(R.styleable.NumberPreference_min, 1);
+        m_iMax = a.getInt(R.styleable.NumberPreference_max, 3);
+        if(m_iMin < 0 || m_iMin > m_iMax) {
+            throw new IllegalArgumentException();
+        }
+
+        m_bDynamicMax = a.getBoolean(R.styleable.NumberPreference_dynamicMax, false);
+        if (m_bDynamicMax) {
+            m_sDynamicMaxKey = a.getString(R.styleable.NumberPreference_dynamicMaxKey);
+            if ((m_sDynamicMaxKey != null) && !m_sDynamicMaxKey.isEmpty()) {
+                int iDynamicMax = SettingsProvider.getIntCustomDefault(context, m_sDynamicMaxKey, 0);
+                if (iDynamicMax > 0) {
+                    m_iMax = iDynamicMax;
+                }
+            }
+        }
+
+        a.recycle();
+    }
+
+    public void setMax(int iNewMax) {
+        if (this.m_bDynamicMax) {
+            if (iNewMax > 0) {
+                this.m_iMax = iNewMax;
+                if (this.mNumberPicker != null) {
+                    this.mNumberPicker.invalidate();
+                }
+            }
+            else {
+                throw new IllegalArgumentException();
+            }
+        }
+    }
+
+    @Override
+    protected View onCreateDialogView() {
+        mNumberPicker = new android.widget.NumberPicker(getContext());
+        return mNumberPicker;
+    }
+
+    @Override
+    protected void onPrepareDialogBuilder(AlertDialog.Builder builder) {
+        super.onPrepareDialogBuilder(builder);
+
+        builder.setTitle(getTitle()).setCancelable(true);
+    }
+
+    @Override
+    protected void onBindDialogView(View view) {
+        super.onBindDialogView(view);
+
+        if (m_bDynamicMax) {
+            if ((m_sDynamicMaxKey != null) && !m_sDynamicMaxKey.isEmpty()) {
+                int iDynamicMax = SettingsProvider.getIntCustomDefault(getContext(), m_sDynamicMaxKey, 0);
+                if (iDynamicMax > 0) {
+                    m_iMax = iDynamicMax;
+                }
+            }
+        }
+
+        NumberPicker picker = (NumberPicker)view;
+        picker.setMinValue(m_iMin);
+        picker.setMaxValue(m_iMax);
+        picker.setValue(getPersistedInt(m_iMin));
+    }
+
+    @Override
+    protected void onDialogClosed(boolean positiveResult) {
+        super.onDialogClosed(positiveResult);
+
+        if(positiveResult) {
+            persistInt(mNumberPicker.getValue());
+        }
+    }
+
+    @Override
+    protected void onSetInitialValue(boolean restorePersistedValue, Object defaultValue) {
+        int value = m_iMin;
+        if (restorePersistedValue) {
+            value = getPersistedInt(1);
+        } else {
+            Integer defVal = (Integer)defaultValue;
+            if (defVal != null) {
+                value = defVal;
+            }
+        }
+        if(value < m_iMin) {
+            value = m_iMin;
+        }
+    }
+
+    @Override
+    protected Object onGetDefaultValue(TypedArray a, int index) {
+        return a.getInteger(index, 1);
+    }
+
+}
+
diff --git a/src/com/android/launcher3/Workspace.java b/src/com/android/launcher3/Workspace.java
index bba10a1..8be1178 100644
--- a/src/com/android/launcher3/Workspace.java
+++ b/src/com/android/launcher3/Workspace.java
@@ -352,8 +352,12 @@ public class Workspace extends SmoothPagedView
         mDefaultPage = a.getInt(R.styleable.Workspace_defaultScreen, 1);
         mDefaultScreenId = SettingsProvider.getLongCustomDefault(context,
                 SettingsProvider.SETTINGS_UI_HOMESCREEN_DEFAULT_SCREEN_ID, -1);
+
         a.recycle();

+        //dynamic number of max rows & columns
+        CalculateDynamicCellMaxes();
+
         setOnHierarchyChangeListener(this);
         setHapticFeedbackEnabled(false);

@@ -377,6 +381,26 @@ public class Workspace extends SmoothPagedView
         }
     }

+    private void CalculateDynamicCellMaxes() {
+        //get the device profile
+        LauncherAppState app = LauncherAppState.getInstance();
+        DeviceProfile grid = app.getDynamicGrid().getDeviceProfile();
+
+        //calculate rows
+        int iSearchBarHeight = (grid.searchBarVisible)? grid.searchBarSpaceHeightPx : 0;
+        float fAvailableSpace = ((grid.availableHeightPx - iSearchBarHeight -
+                                grid.hotseatBarHeightPx - grid.pageIndicatorHeightPx) * 0.9f);
+        int iMaxIcons = ((int)fAvailableSpace / (grid.iconSizePx + grid.iconTextSizePx));
+        SettingsProvider.get(mLauncher).edit().putInt(SettingsProvider.SETTINGS_UI_HOMESCREEN_ROWS_MAX,
+                                                      iMaxIcons).commit();
+
+        //calculate columns
+        fAvailableSpace = ((grid.availableWidthPx - grid.desiredWorkspaceLeftRightMarginPx) * 0.9f);
+        iMaxIcons = ((int)fAvailableSpace / grid.iconSizePx);
+        SettingsProvider.get(mLauncher).edit().putInt(SettingsProvider.SETTINGS_UI_HOMESCREEN_COLUMNS_MAX,
+                                                      iMaxIcons).commit();
+    }
+
     // estimate the size of a widget with spans hSpan, vSpan. return MAX_VALUE for each
     // dimension if unsuccessful
     public int[] estimateItemSize(int hSpan, int vSpan,
diff --git a/src/com/android/launcher3/settings/SettingsProvider.java b/src/com/android/launcher3/settings/SettingsProvider.java
index abf4e1b..483d548 100644
--- a/src/com/android/launcher3/settings/SettingsProvider.java
+++ b/src/com/android/launcher3/settings/SettingsProvider.java
@@ -31,6 +31,10 @@ public final class SettingsProvider {
     public static final String SETTINGS_UI_HOMESCREEN_SCROLLING_WALLPAPER_SCROLL = "ui_homescreen_scrolling_wallpaper_scroll";
     public static final String SETTINGS_UI_HOMESCREEN_SCROLLING_PAGE_OUTLINES = "ui_homescreen_scrolling_page_outlines";
     public static final String SETTINGS_UI_HOMESCREEN_SCROLLING_FADE_ADJACENT = "ui_homescreen_scrolling_fade_adjacent";
+    public static final String SETTINGS_UI_HOMESCREEN_ROWS = "ui_homescreen_rows";
+    public static final String SETTINGS_UI_HOMESCREEN_COLUMNS = "ui_homescreen_columns";
+    public static final String SETTINGS_UI_HOMESCREEN_ROWS_MAX = "ui_homescreen_rows_max";
+    public static final String SETTINGS_UI_HOMESCREEN_COLUMNS_MAX = "ui_homescreen_columns_max";
     public static final String SETTINGS_UI_DRAWER_SCROLLING_TRANSITION_EFFECT = "ui_drawer_scrolling_transition_effect";
     public static final String SETTINGS_UI_DRAWER_SCROLLING_FADE_ADJACENT = "ui_drawer_scrolling_fade_adjacent";
     public static final String SETTINGS_UI_DRAWER_HIDDEN_APPS = "ui_drawer_hidden_apps";
--
1.9.1
